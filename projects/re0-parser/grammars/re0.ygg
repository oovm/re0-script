grammar LifeRestart {

}
class Root {
    Statement* EOI
}
union Statement {
    | PropertyStatement
    | TraitGroup
    | TraitStatement
}
class EOS {
    /;/
}
// === 定义属性 === ---------------------------------------------------------------------------------------------------------
class PropertyStatement {
    ^KW_PROPERTY Identifier '{' PropertyItem* '}'
}

union PropertyItem {
    | IdStatement
    | DescriptionStatement
    | RequirementStatement
    | OptionStatement
    | EnumerateStatement
    | EOS
}
class EnumerateStatement {
    ^KW_ENUMERATE Identifier '[' (variant:Identifier (^COMMA variant:Identifier)* ^COMMA?)? ']'
}
class OptionStatement {
    ^KW_OPTIONS Identifier '[' (variant:Identifier (^COMMA variant:Identifier)* ^COMMA?)? ']'
}
// === 定义天赋 === ---------------------------------------------------------------------------------------------------------
class TraitGroup {
    ^KW_TRAIT_GROUP Identifier '{' TraitStatement* '}'
}
class TraitStatement {
    ^KW_TRAIT Identifier '{' TraitItem* '}'
}

union TraitItem {
    | IdStatement
    | DescriptionStatement
    | RequirementStatement
    | EOS
}

class TraitProperty {
    Identifier ':' Atomic
}

class EventStatement {
    ^KW_EVENT Identifier EventBlock
}

class EventBlock {
    '{' EventProperty* '}'
}

class EventProperty {
    Identifier (':' | '[') Expression (']' | '{' EventBlock '}' | EventBlock)?
}
// === 通用属性 === ---------------------------------------------------------------------------------------------------------
class IdStatement {
    ^KW_ID Integer
}
class DescriptionStatement {
    ^KW_DESCRIPTION String? | '[' (String (^COMMA String)* ^COMMA?)? ']'
}
class RequirementStatement {
    ^KW_REQUIREMENT '{'  '}'
}
// === 表达式 === ---------------------------------------------------------------------------------------------------------
class Expression {
    Atomic
}

@railway(false)
union Atomic {
    | Identifier
    | Integer
    | StringRaw
    | StringNormal
    | Boolean
    | RangeExact
    | Range
}

@style(operator)
@railway(false)
union Prefix {
    | /不是|非|!/
}

@style(operator)
@railway(false)
union Infix {
    | /大于|>/     #GT
    | /大于等于|>=/ #GEQ
    | /小于|</     #LT
    | /小于等于|<=/ #LEQ
    | /为|等于|==/  #EQ
    | /不等于|!=/   #NE
    | /&&|且/      #And
    | /\|\||或/    #Or
}

atomic union String {
    | StringRaw
}

atomic class StringRaw {
    "'" StringRawText "'"
}

text class StringRawText {
    /[^']*/
}

atomic class StringNormal {
    '"' StringItem* '"'
}

union StringItem {
    | EscapedUnicode
    | EscapedCharacter
    | TextAny
}

atomic class EscapedUnicode {
    '\u{' HEX '}'
}

atomic class EscapedCharacter {
    /\\./
}

text class HEX {
    [0-9a-fA-F]{1, 6}
}

text class TextAny {
    /[^"\\]+/
}

text class Identifier {
    /[_\p{XID_start}]\p{XID_continue}*/
}

text class Integer {
    /0|[1-9][0-9]*/
}

class RangeExact {
    '{' Integer '}'
}

class Range {
    '{' (min: Integer)? ',' (max: Integer)? '}'
}

union Boolean {
    | /真|true/ #True
    | /假|false/ #False
}

@railway(false)
token {
    COMMA: /,/
}

@railway(false)
@style(keyword)
token {
    KW_PROPERTY: /属性|property/
    KW_TRAIT_GROUP: /特质组|特征组|天赋组|(trait|talent)s|(trait|talent)-group/
    KW_TRAIT: /特质|特征|天赋|trait|talent/
    KW_EVENT_GROUP: /事件组|events|event-group/
    KW_EVENT: /事件|event/
    KW_ID:/编号|[Ii][Dd]/
    // description
    KW_DESCRIPTION: /动态文本|动态描述|文本|描述|details?/
    KW_REQUIREMENT: /出现要求|要求|requires/
    KW_ENUMERATE: /枚举|enumerate/
    KW_OPTIONS: /选项|options/
}

@railway(false)
hide class WhiteSpace {
    /\p{White_Space}+/
}

@style(comment)
@railway(false)
hide class Comment {
    | /\/\/[^\n\r]*/
    | '/*' '*/'
}
